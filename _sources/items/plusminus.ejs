<!-- prettier-ignore -->
<% const localTitle = 'プラスマイナスアイコン（ホバーアニメーション付き）'; %>

<!-- prettier-ignore -->
<% const demoStyle = `
<style data-js-selector="sourceLazy" data-js-attributes="csscopyand">
  .cca-iconPlus {
    display: inline-block;
    width: 20px;
    height: 20px;
    position: relative;
  }
  .cca-iconPlus::before,
  .cca-iconPlus::after {
    content: '';
    display: block;
    width: 100%;
    height: 0;
    position: absolute;
    left: 0;
    top: 50%;
    border-bottom: solid 3px black;
    transition: transform 300ms ease-out;
  }
  .cca-iconPlus::after {
    transform: rotate(90deg);
    transition-delay: 100ms;
    transition-duration: 200ms;
  }
  .cca-iconPlus:hover::before {
    transform: rotate(180deg);
  }
  .cca-iconPlus:hover::after {
    transform: rotate(180deg);
  }
</style>
`; %>

<!-- prettier-ignore -->
<% const demo = `
<div class="demo" data-js-selector="source" data-js-attributes="demoHtml">
  <span class="cca-iconPlus"></span>
</div>
`; %>

<!-- prettier-ignore -->
<% const howToUse = `
<div class="howToUse">
  <p class="howToUse__description">
    <code class="inlineCode">span</code>要素を１つ用意し、<code
      class="inlineCode"
      >class="cca-iconPlus"</code
    >を付与してください。<br />
  </p>
  <div>
    <p class="button" data-js-selector="accordion" data-js-attributes="remove">
      サンプルHTMLを表示する
    </p>
    <pre><code class="language-html" data-js-selector="demoHtml"></code></pre>
  </div>
</div>
`; %>

<!-- prettier-ignore -->
<% const combineWithJs = null; %>

<!-- prettier-ignore -->
<% const cssDescription = `
<div class="cssDescription">
  <p
    class="button"
    data-js-selector="accordion"
    data-js-attributes="remove"
    onclick="gtag('event', 'cv', { event_category: 'openedCssCodes' })"
  >
    CSSコードの解説を見てみる
  </p>
  <div class="cssDescription__body">
    <p class="cssDescription__body__text">
      最初に配置・アイコンの大きさを決めます。<br />
      テキストが回り込むように<code class="inlineCode"
        >display: inline-block;</code
      >を当てておきます。<br />
      アイコンの表示要素は絶対配置にするため、<code class="inlineCode"
        >position: relative;</code
      >を当てておきます。<br />
    </p>
    <pre
      class="cssDescription__body__code"
    ><code class="language-css" data-js-selector="quote" data-js-attributes="csscopyand, 1, 6"></code></pre>
    <p class="cssDescription__body__text">
      プラスの棒を<code class="inlineCode">before</code>と<code
        class="inlineCode"
        >after</code
      >で表現します。<br />
      横幅いっぱいの長さ、高さは０、<code class="inlineCode">top: 50%;</code
      >で中央配置にします。<br />
      棒は<code class="inlineCode">border-bottom</code>で表現します。<br />
      ホバー時にアニメーションさせるため、<code class="inlineCode"
        >transition</code
      >プロパティを設定します。<br />
      ３つの値を指定しており、左からアニメーション対象プロパティ<code
        class="inlineCode"
        >transform</code
      >、アニメーション時間<code class="inlineCode">300ms</code>、緩急<code
        class="inlineCode"
        >ease-out</code
      >です。<br />
    </p>
    <pre
      class="cssDescription__body__code"
    ><code class="language-css" data-js-selector="quote" data-js-attributes="csscopyand, 7, 18"></code></pre>
    <p class="cssDescription__body__text">
      <code class="inlineCode">before</code>と<code class="inlineCode"
        >after</code
      >で用意した２本の棒のうち１本を<code class="inlineCode"
        >transform: rotate(90deg);</code
      >で縦向きにします。<br />
      横棒とアニメーションを少し変化させます。<br />
      <code class="inlineCode">transition-delay</code
      >でアニメーション開始までの遅延時間を設定、<code class="inlineCode"
        >transition-duration</code
      >でアニメーション時間を上書きしています。<br />
    </p>
    <pre
      class="cssDescription__body__code"
    ><code class="language-css" data-js-selector="quote" data-js-attributes="csscopyand, 19, 23"></code></pre>
    <p class="cssDescription__body__text">
      ホバー時に回転の角度を揃えることで１本の線に見せます。<br />
    </p>
    <pre
      class="cssDescription__body__code"
    ><code class="language-css" data-js-selector="quote" data-js-attributes="csscopyand, 24, 29"></code></pre>
  </div>
</div>
`; %>

<!-- prettier-ignore -->
<%- include('../_ejsModules/itemLayout', { localTitle, demoStyle, demo, howToUse, combineWithJs, cssDescription }) %>
